#Duplicate PRTP SQL
class DuplicatePrtp:
    AGM_SQL = '''
    SELECT DISTINCT AA.AGMT_NUM, att.arrg_type_desc,ws.subj_desc  FROM all_agreements aa
    join desg_interests di on aa.arrg_key = di.arrg_key
    join all_agreements aa2 on aa.arrg_key = aa2.arrg_prnt_key
    join desg_interests di2 on aa2.arrg_key = di2.arrg_key 
    join arrangement_types att on aa.arrg_type_code = att.arrg_type_code
    join workspace_subject ws on aa.subj_code = ws.subj_code
    where aa.arrg_dscr = 'AGM' and aa2.arrg_dscr <> 'AGM'  AND ARRG_STAT_CODE = 'A'
    and not exists (SELECT 0 FROM DESG_INTERESTS DI3 JOIN QCTRL_ACQUISITION_CODES QC ON DI3.PRTP_KEY = QC.PRTP_KEY WHERE QC.ACQ_CD = 'TLW' AND AA.ARRG_KEY = DI3.ARRG_KEY)
    AND SUBJ_CODE  NOT IN ('MAG') order by 1,2
    '''

    #
    ARE_SQL = '''
    SELECT distinct AA.AGMT_NUM,AA.SUBS_NUM,ATT.ARRG_TYPE_DESC, ws.subj_desc FROM all_agreements aA
    join desg_interests di on aa.arrg_key = di.arrg_key
    join all_agreements aa2 on aa.arrg_key = aa2.arrg_prnt_key
    join desg_interests di2 on aa2.arrg_key = di2.arrg_key 
    join arrangement_types att on aa.arrg_type_code = att.arrg_type_code
    join workspace_subject ws on aa.subj_code = ws.subj_code
    where aa.arrg_dscr = 'ARE' and aa2.arrg_dscr IN ('DEP')  AND SUBJ_CODE  NOT IN ('MAG') AND ARRG_STAT_CODE = 'A'
    AND NOT EXISTS (SELECT 0 FROM DESG_INTERESTS DI2 JOIN QCTRL_ACQUISITION_CODES QC ON DI2.PRTP_KEY = QC.PRTP_KEY WHERE QC.ACQ_CD = 'TLW' AND AA.ARRG_KEY = DI2.ARRG_KEY)
    ORDER BY 1,2 
    '''
    
class DND_Change_Log:
    DND_SQL = """
        SELECT DISTINCT
      A.AGMT_NUM,
      R.DOC_ID,
      CASE WHEN to_char(AL.UPDT_DATE,'YYYY-MM-DD') = to_char(R.LOG_DT,'YYYY-MM-DD') THEN 'AGREEMENT' ELSE 'DATE & DOC' END What_Modified,
      CASE WHEN to_char(AL.UPDT_DATE,'YYYY-MM-DD') = to_char(R.LOG_DT,'YYYY-MM-DD') THEN TO_CHAR(AL.UPDT_DATE,'MM-DD-YYYY') ELSE TO_CHAR(SDL.UPDT_DATE,'MM-DD-YYYY') END When_Modified,
      CASE WHEN to_char(AL.UPDT_DATE,'YYYY-MM-DD') = to_char(R.LOG_DT,'YYYY-MM-DD') THEN AL.UPDT_OPER ELSE SDL.UPDT_OPER END Who_Modified
    FROM QTRAN_DOCMGMT_DOC_RESET R
    LEFT OUTER JOIN DOC_HEADER DH ON
    RTRIM(R.DOC_ID) = DH.DOC_PATH
    LEFT OUTER JOIN DOC_STIP_DATE_RLTN DXREF ON
    DH.DOC_KEY = DXREF.DOC_KEY
    LEFT OUTER JOIN STIPULATION_DATE SD ON
    DXREF.STIP_KEY = SD.STIP_KEY
    LEFT OUTER JOIN ALL_AGREEMENTS A ON
    SD.ARRG_KEY = A.ARRG_KEY
    LEFT OUTER JOIN ALL_AGREEMENTS_LOG AL ON
    A.ARRG_KEY = AL.ARRG_KEY
    LEFT OUTER JOIN STIPULATION_DATE_LOG SDL ON
    SD.STIP_KEY = SDL.STIP_KEY
    WHERE R.LOG_DT BETWEEN SYSDATE - 8 AND SYSDATE
    AND TO_CHAR(R.LOG_DT,'YYYY-MM-DD') < TO_CHAR(SYSDATE,'YYYY-MM-DD')
    AND (TO_CHAR(R.LOG_DT,'YYYY-MM-DD') = TO_CHAR(SDL.UPDT_DATE,'YYYY-MM-DD') OR
        TO_CHAR(R.LOG_DT,'YYYY-MM-DD') = TO_CHAR(AL.UPDT_DATE,'YYYY-MM-DD'))
    AND CASE WHEN to_char(AL.UPDT_DATE,'YYYY-MM-DD') = to_char(R.LOG_DT,'YYYY-MM-DD') THEN AL.UPDT_OPER ELSE SDL.UPDT_OPER END <> 'BSEC\QPECUSER'
    ORDER BY WHEN_MODIFIED,A.AGMT_NUM, DOC_ID, WHO_MODIFIED
     """

class NewWellsAdded_Hartz:
    HARTZ_KEA_SQL = """
        SELECT 
        GP.PROP_NO    PROP_NO,
        GP.PROP_NM    PROP_NAME,
        GP.ACQ_NO    ACQ_NO,
        ST.ALT_ST_CD   STATE,
        GC.CNTY_DESCR   CNTY,
        GW.WELL_STAT_DESCR  COMPLETION_STATUS,
        PW.API_WELL_NO    API_NO,
        DD.BA_NO    BA_NO,
        CASE WHEN DD.INT_TYPE_CD = 'IO' THEN 'OR'
          WHEN DD.INT_TYPE_CD IN ('IR','RI','NR') THEN 'RI'
          WHEN DD.INT_TYPE_CD = 'WI' AND DD.DO_TYPE_CD = 'JIB' THEN 'GWI'
          WHEN DD.INT_TYPE_CD = 'WI' AND DD.DO_TYPE_CD <> 'JIB' THEN 'WI'
        ELSE DD.INT_TYPE_CD
        END INT_TYPE,
        DD.NRI_DEC PCT_INT,
        GPA.DEV_YR  DEV_YR,
        PFP.FLD_NM  FIELD_NAME,
        PR.RESVR_NM RESVR_NM,
        /*CASE WHEN PR.RESVR_NM IS NOT NULL THEN PR.RESVR_NM
          WHEN PT.PLAY_TREND_DESCR IS NOT NULL THEN UPPER(PT.PLAY_TREND_DESCR)
         ELSE 'N/A'
        END RESVR_DESCR,*/
        GB.BA_NM1 OPERATOR,
        CONVERT(VARCHAR(10),PWC.EFF_DT_FROM,101) AS [MM/DD/YYYY] 
        --PW.UPDT_DT,
        --PWC.EFF_DT_FROM
        FROM GONL_PROP  GP
        JOIN GCDE_ST ST ON GP.ST_CD = ST.ST_CD 
        JOIN GCDE_CNTY GC ON GP.CNTY_CD = GC.CNTY_CD AND ST.ST_CD = GC.ST_CD
        JOIN PONL_WELL PW ON GP.PROP_NO = PW.WELL_NO
        JOIN PONL_WELL_COMPL PWCL ON PW.WELL_NO = PWCL.WELL_NO 
        JOIN PONL_WELL_COMPL_EFF_DT PWC ON PW.WELL_NO = PWC.WELL_NO 
        JOIN GCDE_WELL_STAT GW ON PWC.WELL_STAT_CD = GW.WELL_STAT_CD AND GW.PRODUCING_FL = 'Y'
        JOIN (SELECT PROP_NO,BA_NO, INT_TYPE_CD, NRI_DEC,DO_TYPE_CD FROM DONL_DO_DETAIL D1 WHERE  BA_NO NOT IN ('999999') AND INT_TYPE_CD <> 'IO' 
           UNION
           SELECT PROP_NO,BA_NO, INT_TYPE_CD, NRI_DEC,DO_TYPE_CD FROM DONL_DO_DETAIL D2 WHERE BA_NO NOT IN ('999999') AND INT_TYPE_CD = 'IO' 
           AND EXISTS (SELECT 0 AS TIER FROM DONL_DO_DETAIL D3 WHERE D2.PROP_NO = D3.PROP_NO 
           GROUP BY D3.PROP_NO HAVING D2.TIER = MAX(D3.TIER))) DD ON DD.PROP_NO = GP.PROP_NO AND INT_TYPE_CD <> 'DI'
        JOIN GONL_PROP_ADDL GPA ON GP.PROP_NO = GPA.PROP_NO
        JOIN PONL_FLD PFP ON PWCL.FLD_NO = PFP.FLD_NO
        LEFT OUTER JOIN PONL_RESVR PR ON PWCL.RESVR_NO = PR.RESVR_NO
        /*LEFT OUTER JOIN GCDE_PLAY_TREND PT ON GPA.PLAY_TREND_CD = PT.PLAY_TREND_CD*/
        --JOIN GCDE_PLAY_TREND GPT ON GPA.PLAY_TREND_CD = GPT.PLAY_TREND_CD
        JOIN GONL_PROP_EFF_DT GPE ON GP.PROP_NO = GPE.PROP_NO
        JOIN GONL_BA GB ON GPE.BA_NO = GB.BA_NO
        --JOIN (SELECT WELL_NO, PWC2.WELL_STAT_CD, MIN(EFF_DT_FROM) EFF_DT_FROM FROM PONL_WELL_COMPL_EFF_DT PWC2  GROUP BY PWC2.WELL_NO,PWC2.WELL_STAT_CD) WT ON PW.WELL_NO = WT.WELL_NO AND PWC.WELL_STAT_CD = WT.WELL_STAT_CD
        WHERE GP.PROP_STAT_CD = 'A' 
        AND NOT EXISTS (SELECT 0 FROM [BSM_ROLLUP].[dbo].[ROLLUP_PROP_XREF] OLD_PROP WHERE GP.PROP_NO = OLD_PROP.FROM_PROP) --This is only required for April well master
        AND DD.BA_NO IN ('034096')
        AND PWC.EFF_DT_FROM BETWEEN 
     """

class QRARemitterRpt:
    CHK_REMITTER_SQL = """
    SELECT
  CONVERT(VARCHAR(10),VJE_LSE_SALE_HIST_OWNR.ACCTG_MTH,101) AS ACCOUNTING_MONTH,
  VJE_LSE_SALE_HIST_OWNR.ACQUISITION_DESCR AS ACQUISITION,
  VJE_LSE_SALE_HIST_OWNR.RMITR_NO AS REMITTER_NUMBER,
  VJE_LSE_SALE_HIST_OWNR.RMITR_BA_NM1 AS BA_NAME_LINE_1,
  VJE_LSE_SALE_HIST_OWNR.RMITR_BA_NM2 AS BA_NAME_LINE_2,
  SUM(VJE_LSE_SALE_HIST_OWNR.TRANS_AMT) AS TRANSACTION_AMOUNT
FROM
  VJE_LSE_SALE_HIST_OWNR
WHERE
  VJE_LSE_SALE_HIST_OWNR.ACCTG_MTH  BETWEEN  @@DATE_RANGE
GROUP BY
  VJE_LSE_SALE_HIST_OWNR.ACCTG_MTH, 
  VJE_LSE_SALE_HIST_OWNR.ACQUISITION_DESCR, 
  VJE_LSE_SALE_HIST_OWNR.RMITR_NO, 
  VJE_LSE_SALE_HIST_OWNR.RMITR_BA_NM1, 
  VJE_LSE_SALE_HIST_OWNR.RMITR_BA_NM2
ORDER BY 1,2 """

    CHK_REMITTER_PIVOT_SQL = """
SELECT 
	 ACQUISITION,BA_NAME_LINE_1,BA_NAME_LINE_2,REMITTER_NUMBER,@@MNULL
	FROM (
	SELECT
	  --RIGHT(CONVERT(VARCHAR(10), VJE_LSE_SALE_HIST_OWNR.ACCTG_MTH, 103), 7) AS [ACCOUNTING_MONTH],
	  CONVERT(VARCHAR(10),VJE_LSE_SALE_HIST_OWNR.ACCTG_MTH,101) AS [ACCOUNTING_MONTH],
	  VJE_LSE_SALE_HIST_OWNR.ACQUISITION_DESCR AS [ACQUISITION],
	  VJE_LSE_SALE_HIST_OWNR.RMITR_NO AS [REMITTER_NUMBER],
	  VJE_LSE_SALE_HIST_OWNR.RMITR_BA_NM1 AS [BA_NAME_LINE_1],
	  VJE_LSE_SALE_HIST_OWNR.RMITR_BA_NM2 AS [BA_NAME_LINE_2],
	  VJE_LSE_SALE_HIST_OWNR.TRANS_AMT AS [TRANSACTION_AMOUNT]
	FROM
	  VJE_LSE_SALE_HIST_OWNR
	WHERE
	  VJE_LSE_SALE_HIST_OWNR.ACCTG_MTH  BETWEEN  @@DATE_RANGE
	  /*AND VJE_LSE_SALE_HIST_OWNR.ACQUISITION_DESCR = 'Eagle Rock'
	  AND VJE_LSE_SALE_HIST_OWNR.RMITR_BA_NM1 = 'BP AMERICA PRODUCTION COMPANY'*/
) AS SourceTable
PIVOT
(
SUM([TRANSACTION_AMOUNT])
FOR [ACCOUNTING_MONTH] IN (@@MONTHS) 
)AS PivotTable """
    
    CHK_REMITTER_EXCEPTION_SQL = """
SELECT 
	 ACQUISITION,BA_NAME_LINE_1,BA_NAME_LINE_2,REMITTER_NUMBER,@@MNULL
	FROM (
""" + CHK_REMITTER_PIVOT_SQL + """
) as Exception
WHERE @@ZMON
ORDER BY 1,2
"""

class NewWellsAdded:
    KEA_SQL = """
    SELECT 
    GP.PROP_NO    PROP_NO,
    GP.PROP_NM    PROP_NAME,
    GP.ACQ_NO    ACQ_NO,
    ST.ALT_ST_CD   STATE,
    GC.CNTY_DESCR   CNTY,
    GW.WELL_STAT_DESCR  COMPLETION_STATUS,
    PW.API_WELL_NO    API_NO,
    DD.BA_NO    BA_NO,
    CASE WHEN DD.INT_TYPE_CD = 'IO' THEN 'OR'
      WHEN DD.INT_TYPE_CD IN ('IR','RI','NR') THEN 'RI'
      WHEN DD.INT_TYPE_CD = 'WI' AND DD.DO_TYPE_CD = 'JIB' THEN 'GWI'
      WHEN DD.INT_TYPE_CD = 'WI' AND DD.DO_TYPE_CD <> 'JIB' THEN 'WI'
    ELSE DD.INT_TYPE_CD
    END INT_TYPE,
    DD.NRI_DEC PCT_INT,
    GPA.DEV_YR  DEV_YR,
    PFP.FLD_NM  FIELD_NAME,
    PR.RESVR_NM RESVR_NM,
    /*CASE WHEN PR.RESVR_NM IS NOT NULL THEN PR.RESVR_NM
      WHEN PT.PLAY_TREND_DESCR IS NOT NULL THEN UPPER(PT.PLAY_TREND_DESCR)
     ELSE 'N/A'
    END RESVR_DESCR,*/
    GB.BA_NM1 OPERATOR,
    CONVERT(VARCHAR(10),PWC.EFF_DT_FROM,101) AS [MM/DD/YYYY] 
    --PW.UPDT_DT,
    --PWC.EFF_DT_FROM
    FROM GONL_PROP  GP
    JOIN GCDE_ST ST ON GP.ST_CD = ST.ST_CD 
    JOIN GCDE_CNTY GC ON GP.CNTY_CD = GC.CNTY_CD AND ST.ST_CD = GC.ST_CD
    JOIN PONL_WELL PW ON GP.PROP_NO = PW.WELL_NO
    JOIN PONL_WELL_COMPL PWCL ON PW.WELL_NO = PWCL.WELL_NO 
    JOIN PONL_WELL_COMPL_EFF_DT PWC ON PW.WELL_NO = PWC.WELL_NO 
    JOIN GCDE_WELL_STAT GW ON PWC.WELL_STAT_CD = GW.WELL_STAT_CD AND GW.PRODUCING_FL = 'Y'
    JOIN (SELECT PROP_NO,BA_NO, INT_TYPE_CD, NRI_DEC,DO_TYPE_CD FROM DONL_DO_DETAIL D1 WHERE  BA_NO NOT IN ('999999') AND INT_TYPE_CD <> 'IO' 
       UNION
       SELECT PROP_NO,BA_NO, INT_TYPE_CD, NRI_DEC,DO_TYPE_CD FROM DONL_DO_DETAIL D2 WHERE BA_NO NOT IN ('999999') AND INT_TYPE_CD = 'IO' 
       AND EXISTS (SELECT 0 AS TIER FROM DONL_DO_DETAIL D3 WHERE D2.PROP_NO = D3.PROP_NO 
       GROUP BY D3.PROP_NO HAVING D2.TIER = MAX(D3.TIER))) DD ON DD.PROP_NO = GP.PROP_NO AND INT_TYPE_CD <> 'DI' AND DD.DO_TYPE_CD IN ('REV','JIB')
    JOIN GONL_PROP_ADDL GPA ON GP.PROP_NO = GPA.PROP_NO
    JOIN PONL_FLD PFP ON PWCL.FLD_NO = PFP.FLD_NO
    LEFT OUTER JOIN PONL_RESVR PR ON PWCL.RESVR_NO = PR.RESVR_NO
    /*LEFT OUTER JOIN GCDE_PLAY_TREND PT ON GPA.PLAY_TREND_CD = PT.PLAY_TREND_CD*/
    --JOIN GCDE_PLAY_TREND GPT ON GPA.PLAY_TREND_CD = GPT.PLAY_TREND_CD
    JOIN GONL_PROP_EFF_DT GPE ON GP.PROP_NO = GPE.PROP_NO
    JOIN GONL_BA GB ON GPE.BA_NO = GB.BA_NO
    --JOIN (SELECT WELL_NO, PWC2.WELL_STAT_CD, MIN(EFF_DT_FROM) EFF_DT_FROM FROM PONL_WELL_COMPL_EFF_DT PWC2  GROUP BY PWC2.WELL_NO,PWC2.WELL_STAT_CD) WT ON PW.WELL_NO = WT.WELL_NO AND PWC.WELL_STAT_CD = WT.WELL_STAT_CD
    WHERE GP.PROP_STAT_CD = 'A' 
    AND NOT EXISTS (SELECT 0 FROM [BSM_ROLLUP].[dbo].[ROLLUP_PROP_XREF] OLD_PROP WHERE GP.PROP_NO = OLD_PROP.FROM_PROP) --This is only required for April well master
    AND DD.BA_NO IN ('000002','000020','000035','000036','000101','000102','034096','000040')
    AND PWC.EFF_DT_FROM BETWEEN
 """

    INT_SQL = '''
SELECT 
PROP_NO,
PROP_NAME,
ACQ_NO,
STATE,
CNTY,
COMPLETION_STATUS,
API_NO,
INT_TYPE,
SUM(PCT_INT) PCT_INT,
DEV_YR,
FIELD_NAME,
RESVR_NM,
OPERATOR,
[MM/DD/YYYY]
FROM(
 SELECT 
  GP.PROP_NO    PROP_NO,
  GP.PROP_NM    PROP_NAME,
  GP.ACQ_NO    ACQ_NO,
  ST.ALT_ST_CD   STATE,
  GC.CNTY_DESCR   CNTY,
  GW.WELL_STAT_DESCR  COMPLETION_STATUS,
  PW.API_WELL_NO    API_NO,
  DD.BA_NO    BA_NO,
  CASE WHEN DD.INT_TYPE_CD = 'IO' THEN 'OR'
    WHEN DD.INT_TYPE_CD IN ('IR','RI','NR') THEN 'RI'
    WHEN DD.INT_TYPE_CD = 'WI' AND DD.DO_TYPE_CD = 'JIB' THEN 'GWI'
    WHEN DD.INT_TYPE_CD = 'WI' AND DD.DO_TYPE_CD <> 'JIB' THEN 'WI'
  ELSE DD.INT_TYPE_CD
  END INT_TYPE,
  DD.NRI_DEC PCT_INT,
  GPA.DEV_YR  DEV_YR,
  PFP.FLD_NM  FIELD_NAME,
  PR.RESVR_NM RESVR_NM,
  /*CASE WHEN PR.RESVR_NM IS NOT NULL THEN PR.RESVR_NM
    WHEN PT.PLAY_TREND_DESCR IS NOT NULL THEN UPPER(PT.PLAY_TREND_DESCR)
   ELSE 'N/A'
  END RESVR_DESCR,*/
  GB.BA_NM1 OPERATOR,
  CONVERT(VARCHAR(10),PWC.EFF_DT_FROM,101) AS [MM/DD/YYYY] 
  --PW.UPDT_DT,
  --PWC.EFF_DT_FROM
  FROM GONL_PROP  GP
  JOIN GCDE_ST ST ON GP.ST_CD = ST.ST_CD 
  JOIN GCDE_CNTY GC ON GP.CNTY_CD = GC.CNTY_CD AND ST.ST_CD = GC.ST_CD
  JOIN PONL_WELL PW ON GP.PROP_NO = PW.WELL_NO
  JOIN PONL_WELL_COMPL PWCL ON PW.WELL_NO = PWCL.WELL_NO 
  JOIN PONL_WELL_COMPL_EFF_DT PWC ON PW.WELL_NO = PWC.WELL_NO 
  JOIN GCDE_WELL_STAT GW ON PWC.WELL_STAT_CD = GW.WELL_STAT_CD AND GW.PRODUCING_FL = 'Y'
  JOIN (SELECT PROP_NO,BA_NO, INT_TYPE_CD, NRI_DEC,DO_TYPE_CD FROM DONL_DO_DETAIL D1 WHERE  BA_NO NOT IN ('999999') AND INT_TYPE_CD <> 'IO' AND DO_TYPE_CD <> 'JIB'
     UNION
     SELECT PROP_NO,BA_NO, INT_TYPE_CD, NRI_DEC,DO_TYPE_CD FROM DONL_DO_DETAIL D2 WHERE BA_NO NOT IN ('999999') AND INT_TYPE_CD = 'IO' 
     AND EXISTS (SELECT 0 AS TIER FROM DONL_DO_DETAIL D3 WHERE D2.PROP_NO = D3.PROP_NO 
     GROUP BY D3.PROP_NO HAVING D2.TIER = MAX(D3.TIER))
	 UNION
	 SELECT PROP_NO,BA_NO, INT_TYPE_CD, NRI_DEC,DO_TYPE_CD FROM DONL_DO_DETAIL D2 WHERE BA_NO NOT IN ('999999') AND INT_TYPE_CD = 'WI' AND TIER = '2' AND DO_TYPE_CD = 'JIB') DD ON DD.PROP_NO = GP.PROP_NO AND INT_TYPE_CD <> 'DI' AND DD.DO_TYPE_CD IN ('REV','JIB')
  JOIN GONL_PROP_ADDL GPA ON GP.PROP_NO = GPA.PROP_NO
  JOIN PONL_FLD PFP ON PWCL.FLD_NO = PFP.FLD_NO
  LEFT OUTER JOIN PONL_RESVR PR ON PWCL.RESVR_NO = PR.RESVR_NO
  /*LEFT OUTER JOIN GCDE_PLAY_TREND PT ON GPA.PLAY_TREND_CD = PT.PLAY_TREND_CD*/
  --JOIN GCDE_PLAY_TREND GPT ON GPA.PLAY_TREND_CD = GPT.PLAY_TREND_CD
  JOIN GONL_PROP_EFF_DT GPE ON GP.PROP_NO = GPE.PROP_NO
  JOIN GONL_BA GB ON GPE.BA_NO = GB.BA_NO
  --JOIN (SELECT WELL_NO, PWC2.WELL_STAT_CD, MIN(EFF_DT_FROM) EFF_DT_FROM FROM PONL_WELL_COMPL_EFF_DT PWC2  GROUP BY PWC2.WELL_NO,PWC2.WELL_STAT_CD) WT ON PW.WELL_NO = WT.WELL_NO AND PWC.WELL_STAT_CD = WT.WELL_STAT_CD
  WHERE GP.PROP_STAT_CD = 'A' 
  AND NOT EXISTS (SELECT 0 FROM [BSM_ROLLUP].[dbo].[ROLLUP_PROP_XREF] OLD_PROP WHERE GP.PROP_NO = OLD_PROP.FROM_PROP) --This is only required for April well master
  AND DD.BA_NO IN ('000002','000020','000035','000036','000101','000102','000103','034096','000040')
  AND PWC.EFF_DT_FROM BETWEEN --'2014-05-01' AND '2014-05-31'
 @@DATERANGE) AS SOURCE --WHERE PROP_NO = '70908678' --INT_TYPE NOT IN ('GWI')
GROUP BY
PROP_NO,
PROP_NAME,
ACQ_NO,
STATE,
CNTY,
COMPLETION_STATUS,
API_NO,
INT_TYPE,
DEV_YR,
FIELD_NAME,
RESVR_NM,
OPERATOR,
[MM/DD/YYYY];
 '''

    INT_SQL_GWI = '''
SELECT 
  GP.PROP_NO    PROP_NO,
  GP.PROP_NM    PROP_NAME,
  GP.ACQ_NO    ACQ_NO,
  ST.ALT_ST_CD   STATE,
  GC.CNTY_DESCR   CNTY,
  GW.WELL_STAT_DESCR  COMPLETION_STATUS,
  PW.API_WELL_NO    API_NO,
  DD.BA_NO    BA_NO,
  DD.TIER TIER,
  CASE WHEN DD.INT_TYPE_CD = 'IO' THEN 'OR'
    WHEN DD.INT_TYPE_CD IN ('IR','RI','NR') THEN 'RI'
    WHEN DD.INT_TYPE_CD = 'WI' AND DD.DO_TYPE_CD = 'JIB' THEN 'GWI'
    WHEN DD.INT_TYPE_CD = 'WI' AND DD.DO_TYPE_CD <> 'JIB' THEN 'WI'
  ELSE DD.INT_TYPE_CD
  END INT_TYPE,
  DD.NRI_DEC PCT_INT,
  GPA.DEV_YR  DEV_YR,
  PFP.FLD_NM  FIELD_NAME,
  PR.RESVR_NM RESVR_NM,
  /*CASE WHEN PR.RESVR_NM IS NOT NULL THEN PR.RESVR_NM
    WHEN PT.PLAY_TREND_DESCR IS NOT NULL THEN UPPER(PT.PLAY_TREND_DESCR)
   ELSE 'N/A'
  END RESVR_DESCR,*/
  GB.BA_NM1 OPERATOR,
  CONVERT(VARCHAR(10),PWC.EFF_DT_FROM,101) AS [MM/DD/YYYY] 
  --PW.UPDT_DT,
  --PWC.EFF_DT_FROM
  FROM GONL_PROP  GP
  JOIN GCDE_ST ST ON GP.ST_CD = ST.ST_CD 
  JOIN GCDE_CNTY GC ON GP.CNTY_CD = GC.CNTY_CD AND ST.ST_CD = GC.ST_CD
  JOIN PONL_WELL PW ON GP.PROP_NO = PW.WELL_NO
  JOIN PONL_WELL_COMPL PWCL ON PW.WELL_NO = PWCL.WELL_NO 
  JOIN PONL_WELL_COMPL_EFF_DT PWC ON PW.WELL_NO = PWC.WELL_NO 
  JOIN GCDE_WELL_STAT GW ON PWC.WELL_STAT_CD = GW.WELL_STAT_CD AND GW.PRODUCING_FL = 'Y'
  JOIN (SELECT PROP_NO,BA_NO, INT_TYPE_CD, NRI_DEC,DO_TYPE_CD,TIER FROM DONL_DO_DETAIL D1 WHERE  BA_NO NOT IN ('999999') AND INT_TYPE_CD <> 'IO' 
     UNION
     SELECT PROP_NO,BA_NO, INT_TYPE_CD, NRI_DEC,DO_TYPE_CD,TIER FROM DONL_DO_DETAIL D2 WHERE BA_NO NOT IN ('999999') AND INT_TYPE_CD = 'IO' 
     AND EXISTS (SELECT 0 AS TIER FROM DONL_DO_DETAIL D3 WHERE D2.PROP_NO = D3.PROP_NO 
     GROUP BY D3.PROP_NO HAVING D2.TIER = MAX(D3.TIER))) DD ON DD.PROP_NO = GP.PROP_NO AND INT_TYPE_CD <> 'DI' AND DD.DO_TYPE_CD IN ('REV','JIB')
  JOIN GONL_PROP_ADDL GPA ON GP.PROP_NO = GPA.PROP_NO
  JOIN PONL_FLD PFP ON PWCL.FLD_NO = PFP.FLD_NO
  LEFT OUTER JOIN PONL_RESVR PR ON PWCL.RESVR_NO = PR.RESVR_NO
  /*LEFT OUTER JOIN GCDE_PLAY_TREND PT ON GPA.PLAY_TREND_CD = PT.PLAY_TREND_CD*/
  --JOIN GCDE_PLAY_TREND GPT ON GPA.PLAY_TREND_CD = GPT.PLAY_TREND_CD
  JOIN GONL_PROP_EFF_DT GPE ON GP.PROP_NO = GPE.PROP_NO
  JOIN GONL_BA GB ON GPE.BA_NO = GB.BA_NO
  --JOIN (SELECT WELL_NO, PWC2.WELL_STAT_CD, MIN(EFF_DT_FROM) EFF_DT_FROM FROM PONL_WELL_COMPL_EFF_DT PWC2  GROUP BY PWC2.WELL_NO,PWC2.WELL_STAT_CD) WT ON PW.WELL_NO = WT.WELL_NO AND PWC.WELL_STAT_CD = WT.WELL_STAT_CD
  WHERE GP.PROP_STAT_CD = 'A' 
  AND NOT EXISTS (SELECT 0 FROM [BSM_ROLLUP].[dbo].[ROLLUP_PROP_XREF] OLD_PROP WHERE GP.PROP_NO = OLD_PROP.FROM_PROP) --This is only required for April well master
  AND DD.BA_NO IN ('000002','000020','000035','000036','000101','000102','000103','034096','000040')
  AND PWC.EFF_DT_FROM BETWEEN
 @@DATERANGE
AND DD.DO_TYPE_CD = 'JIB' order by 1,9
'''

class ArrgTypeDifference_Notification:
    ARRG_DIF_SQL = """SELECT RPAD(AA.AGMT_NUM,45,' ')|| RPAD(AA2.SUBS_NUM,32,' ') || ATT.ARRG_TYPE_DESC ||' : '||ATT2.ARRG_TYPE_DESC FROM ALL_AGREEMENTS AA 
    JOIN ALL_AGREEMENTS AA2 ON AA.ARRG_KEY = AA2.ARRG_PRNT_KEY 
    JOIN ARRANGEMENT_TYPES ATT ON AA.ARRG_TYPE_CODE = ATT.ARRG_TYPE_CODE 
    JOIN ARRANGEMENT_TYPES ATT2 ON AA2.ARRG_TYPE_CODE = ATT2.ARRG_TYPE_CODE 
    WHERE AA.ARRG_TYPE_CODE <> AA2.ARRG_TYPE_CODE """

    ARRG_DIF_UPDT_SQL = """ UPDATE ALL_AGREEMENTS ASUB 
    SET ARRG_TYPE_CODE = (SELECT ARRG_TYPE_CODE FROM ALL_AGREEMENTS AGM WHERE ASUB.ARRG_PRNT_KEY = AGM.ARRG_KEY) 
    WHERE EXISTS (SELECT 0 FROM ALL_AGREEMENTS AGM WHERE ASUB.ARRG_PRNT_KEY = AGM.ARRG_KEY AND ASUB.ARRG_TYPE_CODE <> AGM.ARRG_TYPE_CODE) """

class NRIvsCheckDecimalRpt:
    SQL = """--Report created post rollup to compare remitter check decimal booked by revenue in CI022 screen to the DOI decimal in the Do005 screen.  Report is necessary to determine if BSM is being paid
--the correct interest amount.

SELECT * FROM(
Select 
ROW_NUMBER() OVER (ORDER BY RONL_CI_LINK.RMITR_NO, RONL_CI_CHK_HDR.CHK_NO)  ROWNUM,
RONL_CI_CHK_HDR.CHK_NO,
RONL_CI_LINK.RMITR_NO,
RONL_CI_LINK.RMITR_SUB,
RTRN_CI_CHK_DETAIL_HIST.RMITR_PROP_NO,
RONL_CI_CHK_HDR.RMITR_PAYEE_NO,
RONL_CI_LINK.PROP_NO,
PONL_WELL_COMPL.COMPL_NM,
RONL_CI_LINK.TIER,
PONL_WELL.API_WELL_NO,
RONL_CI_CHK_HDR.ACCTG_MTH,
RTRN_CI_CHK_DETAIL_HIST.PRDN_DT,
RTRN_CI_CHK_DETAIL_HIST.BUS_UNIT_CD,
RTRN_CI_CHK_DETAIL_HIST.RMITR_MAJ_PROD_CD,
RTRN_CI_CHK_DETAIL_HIST.NET_AMT,
RTRN_CI_CHK_DETAIL_HIST.OWNR_DEC,
RTRN_CI_CHK_DETAIL_HIST.DOI_DEC,
PONL_WELL_COMPL.ST_CD,
SCODE_STATE.STATE_FULL_NM,
PONL_WELL_COMPL.CNTY_CD,
SCODE_COUNTY.COUNTY_DESCR,
PONL_WELL_COMPL.RESVR_NO,
PONL_WELL_COMPL.FLD_NO,
PONL_WELL_COMPL.LAT_CD,
PONL_WELL_COMPL.LAT_NO,
PONL_WELL_COMPL.LONG_CD,
PONL_WELL_COMPL.LONG_NO,
PONL_WELL_COMPL.IHS_PRDN_ID,
GONL_PROP_ADDL.PLAY_TREND_CD,
GCDE_PLAY_TREND.PLAY_TREND_DESCR

FROM RTRN_CI_CHK_DETAIL_HIST

LEFT OUTER JOIN RONL_CI_LINK
      ON  RTRN_CI_CHK_DETAIL_HIST.CI_LINK_SEQ_NO = RONL_CI_LINK.CI_LINK_SEQ_NO
      AND RTRN_CI_CHK_DETAIL_HIST.RMITR_PROP_NO = RONL_CI_LINK.RMITR_PROP_NO

LEFT OUTER JOIN RONL_CI_CHK_HDR
      ON RTRN_CI_CHK_DETAIL_HIST.CHK_SEQ_NO = RONL_CI_CHK_HDR.CHK_SEQ_NO
	  AND RONL_CI_LINK.RMITR_NO = RONL_CI_CHK_HDR.RMITR_NO
      AND RONL_CI_LINK.RMITR_SUB = RONL_CI_CHK_HDR.RMITR_SUB 

LEFT OUTER JOIN PONL_WELL
	  ON RONL_CI_LINK.PROP_NO = PONL_WELL.WELL_NO

LEFT OUTER JOIN PONL_WELL_COMPL
	  ON RONL_CI_LINK.PROP_NO = PONL_WELL_COMPL.WELL_NO
	  AND PONL_WELL.WELL_NO = PONL_WELL_COMPL.WELL_NO

LEFT OUTER JOIN GONL_PROP_ADDL
	  ON RONL_CI_LINK.PROP_NO = GONL_PROP_ADDL.PROP_NO
	  AND PONL_WELL.WELL_NO = GONL_PROP_ADDL.PROP_NO

LEFT OUTER JOIN GCDE_PLAY_TREND
	  ON GONL_PROP_ADDL.PLAY_TREND_CD = GCDE_PLAY_TREND.PLAY_TREND_CD

LEFT OUTER JOIN SCODE_STATE
	  ON PONL_WELL_COMPL.ST_CD = SCODE_STATE.API_STATE_CD

LEFT OUTER JOIN SCODE_COUNTY
	  ON PONL_WELL_COMPL.CNTY_CD = SCODE_COUNTY.COUNTY_CD
	  AND SCODE_STATE.STATE_CD = SCODE_COUNTY.STATE_CD

WHERE RONL_CI_CHK_HDR.ACCTG_MTH > '4/1/2014'
AND RTRN_CI_CHK_DETAIL_HIST.BUS_UNIT_CD = @@BUSCD  )A -- execute for all companies (002,020,040,101,102,103,104)

"""

    
